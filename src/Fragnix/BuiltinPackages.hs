module Fragnix.BuiltinPackages where

import Distribution.HaskellSuite.Packages
import Distribution.InstalledPackageInfo
import Distribution.Package hiding (depends, installedPackageId)
import Data.Version
import Distribution.ModuleName
import Distribution.License
import Data.List (intercalate)

builtinpackages :: Packages
builtinpackages = [InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.7.0.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [exposedModule ["Foreign","Concurrent"],exposedModule ["GHC","Arr"],exposedModule ["GHC","Base"],exposedModule ["GHC","Char"],exposedModule ["GHC","Conc"],exposedModule ["GHC","Conc","IO"],exposedModule ["GHC","Conc","Signal"],exposedModule ["GHC","Conc","Sync"],exposedModule ["GHC","ConsoleHandler"],exposedModule ["GHC","Constants"],exposedModule ["GHC","Desugar"],exposedModule ["GHC","Enum"],exposedModule ["GHC","Environment"],exposedModule ["GHC","Err"],exposedModule ["GHC","Exception"],exposedModule ["GHC","Exts"],exposedModule ["GHC","Fingerprint"],exposedModule ["GHC","Fingerprint","Type"],exposedModule ["GHC","Float"],exposedModule ["GHC","Float","ConversionUtils"],exposedModule ["GHC","Float","RealFracMethods"],exposedModule ["GHC","Foreign"],exposedModule ["GHC","ForeignPtr"],exposedModule ["GHC","Generics"],exposedModule ["GHC","GHCi"],exposedModule ["GHC","IO"],exposedModule ["GHC","IO","Buffer"],exposedModule ["GHC","IO","BufferedIO"],exposedModule ["GHC","IO","Device"],exposedModule ["GHC","IO","Encoding"],exposedModule ["GHC","IO","Encoding","CodePage"],exposedModule ["GHC","IO","Encoding","Failure"],exposedModule ["GHC","IO","Encoding","Iconv"],exposedModule ["GHC","IO","Encoding","Latin1"],exposedModule ["GHC","IO","Encoding","Types"],exposedModule ["GHC","IO","Encoding","UTF16"],exposedModule ["GHC","IO","Encoding","UTF32"],exposedModule ["GHC","IO","Encoding","UTF8"],exposedModule ["GHC","IO","Exception"],exposedModule ["GHC","IO","FD"],exposedModule ["GHC","IO","Handle"],exposedModule ["GHC","IO","Handle","FD"],exposedModule ["GHC","IO","Handle","Internals"],exposedModule ["GHC","IO","Handle","Text"],exposedModule ["GHC","IO","Handle","Types"],exposedModule ["GHC","IO","IOMode"],exposedModule ["GHC","IOArray"],exposedModule ["GHC","IORef"],exposedModule ["GHC","IP"],exposedModule ["GHC","Int"],exposedModule ["GHC","List"],exposedModule ["GHC","MVar"],exposedModule ["GHC","Num"],exposedModule ["GHC","PArr"],exposedModule ["GHC","Pack"],exposedModule ["GHC","Profiling"],exposedModule ["GHC","Ptr"],exposedModule ["GHC","Read"],exposedModule ["GHC","Real"],exposedModule ["GHC","ST"],exposedModule ["GHC","Stack"],exposedModule ["GHC","Stats"],exposedModule ["GHC","Show"],exposedModule ["GHC","Stable"],exposedModule ["GHC","Storable"],exposedModule ["GHC","STRef"],exposedModule ["GHC","TypeLits"],exposedModule ["GHC","TopHandler"],exposedModule ["GHC","Unicode"],exposedModule ["GHC","Weak"],exposedModule ["GHC","Word"],exposedModule ["System","Timeout"],exposedModule ["Control","Applicative"],exposedModule ["Control","Arrow"],exposedModule ["Control","Category"],exposedModule ["Control","Concurrent"],exposedModule ["Control","Concurrent","Chan"],exposedModule ["Control","Concurrent","MVar"],exposedModule ["Control","Concurrent","QSem"],exposedModule ["Control","Concurrent","QSemN"],exposedModule ["Control","Exception"],exposedModule ["Control","Exception","Base"],exposedModule ["Control","Monad"],exposedModule ["Control","Monad","Fix"],exposedModule ["Control","Monad","Instances"],exposedModule ["Control","Monad","ST"],exposedModule ["Control","Monad","ST","Safe"],exposedModule ["Control","Monad","ST","Unsafe"],exposedModule ["Control","Monad","ST","Lazy"],exposedModule ["Control","Monad","ST","Lazy","Safe"],exposedModule ["Control","Monad","ST","Lazy","Unsafe"],exposedModule ["Control","Monad","ST","Strict"],exposedModule ["Control","Monad","Zip"],exposedModule ["Data","Bits"],exposedModule ["Data","Bool"],exposedModule ["Data","Char"],exposedModule ["Data","Complex"],exposedModule ["Data","Dynamic"],exposedModule ["Data","Either"],exposedModule ["Data","Eq"],exposedModule ["Data","Data"],exposedModule ["Data","Fixed"],exposedModule ["Data","Foldable"],exposedModule ["Data","Function"],exposedModule ["Data","Functor"],exposedModule ["Data","IORef"],exposedModule ["Data","Int"],exposedModule ["Data","Ix"],exposedModule ["Data","List"],exposedModule ["Data","Maybe"],exposedModule ["Data","Monoid"],exposedModule ["Data","Ord"],exposedModule ["Data","Ratio"],exposedModule ["Data","STRef"],exposedModule ["Data","STRef","Lazy"],exposedModule ["Data","STRef","Strict"],exposedModule ["Data","String"],exposedModule ["Data","Traversable"],exposedModule ["Data","Tuple"],exposedModule ["Data","Typeable"],exposedModule ["Data","Typeable","Internal"],exposedModule ["Data","OldTypeable"],exposedModule ["Data","OldTypeable","Internal"],exposedModule ["Data","Unique"],exposedModule ["Data","Version"],exposedModule ["Data","Word"],exposedModule ["Debug","Trace"],exposedModule ["Foreign"],exposedModule ["Foreign","C"],exposedModule ["Foreign","C","Error"],exposedModule ["Foreign","C","String"],exposedModule ["Foreign","C","Types"],exposedModule ["Foreign","ForeignPtr"],exposedModule ["Foreign","ForeignPtr","Safe"],exposedModule ["Foreign","ForeignPtr","Unsafe"],exposedModule ["Foreign","Marshal"],exposedModule ["Foreign","Marshal","Alloc"],exposedModule ["Foreign","Marshal","Array"],exposedModule ["Foreign","Marshal","Error"],exposedModule ["Foreign","Marshal","Pool"],exposedModule ["Foreign","Marshal","Safe"],exposedModule ["Foreign","Marshal","Utils"],exposedModule ["Foreign","Marshal","Unsafe"],exposedModule ["Foreign","Ptr"],exposedModule ["Foreign","Safe"],exposedModule ["Foreign","StablePtr"],exposedModule ["Foreign","Storable"],exposedModule ["Numeric"],exposedModule ["Prelude"],exposedModule ["System","Console","GetOpt"],exposedModule ["System","CPUTime"],exposedModule ["System","Environment"],exposedModule ["System","Exit"],exposedModule ["System","IO"],exposedModule ["System","IO","Error"],exposedModule ["System","IO","Unsafe"],exposedModule ["System","Info"],exposedModule ["System","Mem"],exposedModule ["System","Mem","StableName"],exposedModule ["System","Mem","Weak"],exposedModule ["System","Posix","Internals"],exposedModule ["System","Posix","Types"],exposedModule ["Text","ParserCombinators","ReadP"],exposedModule ["Text","ParserCombinators","ReadPrec"],exposedModule ["Text","Printf"],exposedModule ["Text","Read"],exposedModule ["Text","Read","Lex"],exposedModule ["Text","Show"],exposedModule ["Text","Show","Functions"],exposedModule ["Unsafe","Coerce"],exposedModule ["GHC","Event"]], hiddenModules = [moduleName ["Control","Monad","ST","Imp"],moduleName ["Control","Monad","ST","Lazy","Imp"],moduleName ["Foreign","ForeignPtr","Imp"],moduleName ["System","Environment","ExecutablePath"],moduleName ["GHC","Event","Array"],moduleName ["GHC","Event","Clock"],moduleName ["GHC","Event","Control"],moduleName ["GHC","Event","EPoll"],moduleName ["GHC","Event","IntMap"],moduleName ["GHC","Event","Internal"],moduleName ["GHC","Event","KQueue"],moduleName ["GHC","Event","Manager"],moduleName ["GHC","Event","TimerManager"],moduleName ["GHC","Event","PSQ"],moduleName ["GHC","Event","Poll"],moduleName ["GHC","Event","Thread"],moduleName ["GHC","Event","Unique"]], trusted = False, importDirs = ["/home/feuerbach/.cabal/lib/i386-linux-haskell-names-0.2/base-4.7.0.0"], libraryDirs = ["base-4.7.0.0"], hsLibraries = ["HSbase-4.7.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/home/feuerbach/.cabal/lib/i386-linux-haskell-names-0.2/base-4.7.0.0/include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.3.1.0",InstalledPackageId "integer-simple-0.1.1.0"], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/base-4.7.0.0/html/base.haddock"], haddockHTMLs = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/base-4.7.0.0/html"]},InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.3.1.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "", exposed = True, exposedModules = [exposedModule ["GHC","Classes"],exposedModule ["GHC","CString"],exposedModule ["GHC","Debug"],exposedModule ["GHC","Magic"],exposedModule ["GHC","PrimopWrappers"],exposedModule ["GHC","IntWord64"],exposedModule ["GHC","Tuple"],exposedModule ["GHC","Types"],exposedModule ["GHC","Prim"]], hiddenModules = [], trusted = False, importDirs = ["/home/feuerbach/.cabal/lib/i386-linux-haskell-names-0.2/ghc-prim-0.3.1.0"], libraryDirs = ["ghc-prim-0.3.1.0"], hsLibraries = ["HSghc-prim-0.3.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/ghc-prim-0.3.1.0/html/ghc-prim.haddock"], haddockHTMLs = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/ghc-prim-0.3.1.0/html"]},InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-simple-0.1.1.0", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-simple", pkgVersion = Version {versionBranch = [0,1,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "igloo@earth.li", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Simple Integer library", description = "This package contains an simple Integer library.", category = "", exposed = True, exposedModules = [exposedModule ["GHC","Integer"],exposedModule ["GHC","Integer","Simple","Internals"],exposedModule ["GHC","Integer","Logarithms"],exposedModule ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [moduleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["/home/feuerbach/.cabal/lib/i386-linux-haskell-names-0.2/integer-simple-0.1.1.0"], libraryDirs = ["integer-simple-0.1.1.0"], hsLibraries = ["HSinteger-simple-0.1.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "ghc-prim-0.3.1.0"], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/integer-simple-0.1.1.0/html/integer-simple.haddock"], haddockHTMLs = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/integer-simple-0.1.1.0/html"]},InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.4.0.2", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,4,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [exposedModule ["Data","Array"],exposedModule ["Data","Array","Base"],exposedModule ["Data","Array","IArray"],exposedModule ["Data","Array","IO"],exposedModule ["Data","Array","IO","Safe"],exposedModule ["Data","Array","IO","Internals"],exposedModule ["Data","Array","MArray"],exposedModule ["Data","Array","MArray","Safe"],exposedModule ["Data","Array","ST"],exposedModule ["Data","Array","ST","Safe"],exposedModule ["Data","Array","Storable"],exposedModule ["Data","Array","Storable","Safe"],exposedModule ["Data","Array","Storable","Internals"],exposedModule ["Data","Array","Unboxed"],exposedModule ["Data","Array","Unsafe"]], hiddenModules = [], trusted = False, importDirs = ["/home/feuerbach/.cabal/lib/i386-linux-haskell-names-0.2/array-0.4.0.2"], libraryDirs = ["array-0.4.0.2"], hsLibraries = ["HSarray-0.4.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.0"], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/array-0.4.0.2/html/array.haddock"], haddockHTMLs = ["/home/feuerbach/.cabal/share/doc/i386-linux-haskell-names-0.2/array-0.4.0.2/html"]}]

moduleName :: [String] -> ModuleName
moduleName = fromString . (intercalate ".")

exposedModule :: [String] -> ExposedModule
exposedModule x = ExposedModule (moduleName x) Nothing Nothing